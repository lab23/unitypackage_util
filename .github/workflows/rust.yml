name: Rust

on:
  push:
    branches: [ "main" ]
    # Also run on tags so release job can publish artifacts
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write   # needed by softprops/action-gh-release

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo build (release)
        run: cargo build --verbose --release
        shell: bash

      - name: Run unitypackage_util help
        run: ./target/release/unitypackage_util --help
        shell: bash

      - name: Adhoc signature
        run: |
          codesign -s - --options=runtime target/release/unitypackage_util
        shell: bash

      - name: Prepare artifact folder
        run: |
          export TARGET=unitypackage_util-macos-x86_64
          mkdir -p "$TARGET"
          cp LICENSE "$TARGET/unitypackage_util-License.txt"
          cp target/release/unitypackage_util "$TARGET/unitypackage_util-macos-x86_64"
        shell: bash

      - name: Upload artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: unitypackage_util-macos-x86_64
          path: unitypackage_util-macos-x86_64/**
          if-no-files-found: error
          retention-days: 30
          include-hidden-files: false

  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo build (release)
        run: cargo build --verbose --release
        shell: bash

      - name: Run unitypackage_util help
        run: ./target/release/unitypackage_util.exe --help
        shell: bash

      - name: Prepare artifact folder
        run: |
          export TARGET=unitypackage_util-windows-x86_64
          mkdir -p "$TARGET"
          cp LICENSE "$TARGET/unitypackage_util-License.txt"
          cp target/release/unitypackage_util.exe "$TARGET/unitypackage_util-windows-x86_64.exe"
        shell: bash

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: unitypackage_util-windows-x86_64
          path: unitypackage_util-windows-x86_64/**
          if-no-files-found: error
          retention-days: 30
          include-hidden-files: false

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo build (release)
        run: cargo build --verbose --release
        shell: bash

      - name: Run unitypackage_util help
        run: ./target/release/unitypackage_util --help
        shell: bash

      - name: Prepare artifact folder
        run: |
          export TARGET=unitypackage_util-linux-x86_64
          mkdir -p "$TARGET"
          cp LICENSE "$TARGET/unitypackage_util-License.txt"
          cp target/release/unitypackage_util "$TARGET/unitypackage_util-linux-x86_64"
        shell: bash

      - name: Upload artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: unitypackage_util-linux-x86_64
          path: unitypackage_util-linux-x86_64/**
          if-no-files-found: error
          retention-days: 30
          include-hidden-files: false

  release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-linux]
    steps:
      - name: Download all artifacts into ./dist (v4 merge)
        uses: actions/download-artifact@v4
        with:
          pattern: unitypackage_util-*
          merge-multiple: true
          path: dist

      - name: List contents
        run: ls -R dist
        shell: bash

      - name: Create per-platform archives (.tar.gz)
        run: |
          set -euo pipefail
          cd dist
          for d in unitypackage_util-*; do
            if [ -d "$d" ]; then
              tar -czf "$d.tar.gz" "$d"
            fi
          done
          ls -lh *.tar.gz
        shell: bash

      - name: Create GitHub Release (attach archives)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.tar.gz
